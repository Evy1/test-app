{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/nmc/Desktop/auth-app/src/components/TastForm/TaskForm.js\";\nimport React, { Component } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport results from '../results';\nimport { Link } from 'react-router-dom';\n\nclass TaskForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: '',\n      content: ''\n    };\n\n    this.postHandler = e => {\n      e.preventDefault();\n      const data = {\n        title: this.state.title,\n        content: this.state.content\n      };\n      results.post('/task.json', data).then(response => {\n        console.log(response);\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.taskHandler = () => {\n      results.get('/task.json').then(res => {\n        const fetchedOrders = [];\n\n        for (let key in res.data) {\n          fetchedOrders.push({ ...res.data[key],\n            id: key\n          });\n        }\n\n        console.log(fetchedOrders);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: this.postHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        id: \"title\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Task Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          required: true,\n          placeholder: \"Title\",\n          value: this.state.title,\n          onChange: e => this.setState({\n            title: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        id: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Task Content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"textarea\",\n          required: true,\n          placeholder: \"Task\",\n          value: this.state.content,\n          onChange: e => this.setState({\n            content: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default TaskForm;","map":{"version":3,"sources":["/home/nmc/Desktop/auth-app/src/components/TastForm/TaskForm.js"],"names":["React","Component","Form","Button","results","Link","TaskForm","state","title","content","postHandler","e","preventDefault","data","post","then","response","console","log","catch","error","taskHandler","get","res","fetchedOrders","key","push","id","err","render","setState","target","value"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport {Form, Button} from 'react-bootstrap';\nimport results from '../results';\nimport {Link} from 'react-router-dom';\n\nclass TaskForm extends Component{\n\n    state = {\n        title: '',\n        content: ''\n    }\n  postHandler = (e) =>{\n    e.preventDefault();\n    const data = {\n        title: this.state.title,\n        content: this.state.content,\n    }\n    results.post('/task.json', data).then(response=>{\n        console.log(response);\n    }).catch(error=>{\n        console.log(error);\n    })\n\n  }\n  taskHandler = ()=>{\n    results.get( '/task.json' )\n    .then( res => {\n        const fetchedOrders = [];\n        for ( let key in res.data ) {\n            fetchedOrders.push( {\n                ...res.data[key],\n                id: key\n            } );\n        }\n      console.log(fetchedOrders)\n    } )\n    .catch( err => {\n        console.log(err)\n    } );\n  }\n    render() {\n       return(\n        <Form onSubmit={this.postHandler}>\n            <Form.Group id=\"title\">\n                <Form.Label>Task Title</Form.Label>\n                <Form.Control type=\"text\"  required placeholder=\"Title\" value={this.state.title} onChange={(e)=> this.setState({title: e.target.value})}/>\n            </Form.Group>\n            <Form.Group id=\"content\">\n                <Form.Label>Task Content</Form.Label>\n                <Form.Control  type=\"textarea\" required placeholder=\"Task\" value={this.state.content} onChange={(e)=> this.setState({content: e.target.value})}/>\n            </Form.Group>\n            <div>\n                <Button type=\"submit\">Submit</Button>\n                <Link to=\"/\">Cancel</Link>\n            </div>\n        </Form>\n\n       )\n    }\n}\nexport default TaskForm;\n"]},"metadata":{},"sourceType":"module"}