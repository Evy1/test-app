{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/nmc/Desktop/auth-app/src/components/Tasks/Tasks.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Card, Container } from \"react-bootstrap\";\nimport styles from \"./Tasks.module.css\";\nimport { useAuth } from \"../../context/AuthContext\";\nimport results from \"../results\";\nimport Buttons from \"../Buttons/Buttons\";\nimport firebase from \"../../firebase\";\nimport Spinner from \"../Spiner/Spiner\";\n\nfunction Tasks() {\n  _s();\n\n  const [items, setItems] = useState([]);\n  const {\n    currentUser\n  } = useAuth();\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    firebase.database().ref(\"task\").on(\"value\", snapshot => {\n      console.log(snapshot.val());\n    }); // const abortController = new AbortController();\n    // const signal = abortController.signal;\n    // results.get(\"/task.json\", { signal: signal }).then((response) => {\n    //   const fetchedResults = [];\n    //   for (let key in response.data) {\n    //     fetchedResults.unshift({\n    //       ...response.data[key],\n    //       id: key,\n    //     });\n    //   }\n    //   setItems(fetchedResults);\n    //   setLoading(false);\n    // });\n    // return function cleanUp() {\n    //   abortController.abort();\n    // };\n  }, []);\n\n  function deleteItem(id) {\n    const db = firebase.database().ref(\"task/\" + id);\n    db.remove();\n    setItems(items);\n  }\n\n  let info = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 14\n  }, this);\n\n  if (!loading) {\n    info = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row d-flex justify-content-center text-center pt-4\",\n      children: items.map(result => result.user === currentUser.uid && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 col-md-4\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: styles.Card,\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: result.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: styles.TaskTitle,\n              children: result.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: result.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex justify-content-center\",\n              children: [/*#__PURE__*/_jsxDEV(Buttons, {\n                click: () => firebase.database().ref(\"task/\" + result.id).update({\n                  status: \"done\"\n                }).then(setItems(items)),\n                class: styles.DoneBtn,\n                disable: result.status === \"done\",\n                children: \"Done\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n                click: () => deleteItem(result.id),\n                class: styles.DeleteBtn,\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n                class: styles.EditBtn,\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this)\n      }, result.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: info\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Tasks, \"RigqNltqGxEdc3xMrS5IjvvKOiY=\", false, function () {\n  return [useAuth];\n});\n\n_c = Tasks;\nexport default Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["/home/nmc/Desktop/auth-app/src/components/Tasks/Tasks.js"],"names":["React","useState","useEffect","Card","Container","styles","useAuth","results","Buttons","firebase","Spinner","Tasks","items","setItems","currentUser","loading","setLoading","database","ref","on","snapshot","console","log","val","deleteItem","id","db","remove","info","map","result","user","uid","date","TaskTitle","title","content","update","status","then","DoneBtn","DeleteBtn","EditBtn"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Card, Container } from \"react-bootstrap\";\nimport styles from \"./Tasks.module.css\";\nimport { useAuth } from \"../../context/AuthContext\";\nimport results from \"../results\";\nimport Buttons from \"../Buttons/Buttons\";\nimport firebase from \"../../firebase\";\nimport Spinner from \"../Spiner/Spiner\";\n\nfunction Tasks() {\n  const [items, setItems] = useState([]);\n  const { currentUser } = useAuth();\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    firebase.database().ref(\"task\").on(\"value\", (snapshot) => {\n        console.log(snapshot.val())\n    })\n    // const abortController = new AbortController();\n    // const signal = abortController.signal;\n    // results.get(\"/task.json\", { signal: signal }).then((response) => {\n    //   const fetchedResults = [];\n    //   for (let key in response.data) {\n    //     fetchedResults.unshift({\n    //       ...response.data[key],\n    //       id: key,\n    //     });\n    //   }\n    //   setItems(fetchedResults);\n    //   setLoading(false);\n    // });\n    // return function cleanUp() {\n    //   abortController.abort();\n    // };\n  }, []);\n\n  function deleteItem(id) {\n    const db = firebase.database().ref(\"task/\" + id);\n    db.remove();\n    setItems(items);\n  }\n\n  let info = <Spinner />;\n  if (!loading) {\n    info = (\n      <div className=\"row d-flex justify-content-center text-center pt-4\">\n        {items.map(\n          (result) =>\n            result.user === currentUser.uid && (\n              <div className=\"col-12 col-md-4\" key={result.id}>\n                <Card className={styles.Card}>\n                  <Card.Body>\n                    <div>{result.date}</div>\n                    <h2 className={styles.TaskTitle}>{result.title}</h2>\n                    <div>\n                      <p>{result.content}</p>\n                    </div>\n                    <div className=\"d-flex justify-content-center\">\n                      <Buttons\n                        click={() =>\n                          firebase\n                            .database()\n                            .ref(\"task/\" + result.id)\n                            .update({ status: \"done\" })\n                            .then(setItems(items))\n                        }\n                        class={styles.DoneBtn}\n                        disable={result.status === \"done\"}\n                      >\n                        Done\n                      </Buttons>\n                      <Buttons\n                        click={() => deleteItem(result.id)}\n                        class={styles.DeleteBtn}\n                      >\n                        Delete\n                      </Buttons>\n                      <Buttons class={styles.EditBtn}>Edit</Buttons>\n                    </div>\n                  </Card.Body>\n                </Card>\n              </div>\n            )\n        )}\n      </div>\n    );\n  }\n  return <Container>{info}</Container>;\n}\nexport default Tasks;\n"]},"metadata":{},"sourceType":"module"}