{"ast":null,"code":"import { createElement } from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar getDirectionStyle = function getDirectionStyle(dir, size) {\n  switch (dir) {\n    case 'left':\n      return {\n        top: 0,\n        left: 0,\n        transform: 'translate3d(-100%, 0, 0)',\n        width: size,\n        height: '100vh'\n      };\n\n    case 'right':\n      return {\n        top: 0,\n        right: 0,\n        transform: 'translate3d(100%, 0, 0)',\n        width: size,\n        height: '100vh'\n      };\n\n    case 'bottom':\n      return {\n        left: 0,\n        right: 0,\n        bottom: 0,\n        transform: 'translate3d(0, 100%, 0)',\n        width: '100%',\n        height: size\n      };\n\n    case 'top':\n      return {\n        left: 0,\n        right: 0,\n        top: 0,\n        transform: 'translate3d(0, -100%, 0)',\n        width: '100%',\n        height: size\n      };\n\n    default:\n      return {};\n  }\n};\n\nvar EZDrawer = function EZDrawer(_ref) {\n  var open = _ref.open,\n      _ref$onClose = _ref.onClose,\n      onClose = _ref$onClose === void 0 ? function () {} : _ref$onClose,\n      children = _ref.children,\n      style = _ref.style,\n      _ref$overlayColor = _ref.overlayColor,\n      overlayColor = _ref$overlayColor === void 0 ? '#000' : _ref$overlayColor,\n      _ref$overlayOpacity = _ref.overlayOpacity,\n      overlayOpacity = _ref$overlayOpacity === void 0 ? 0.4 : _ref$overlayOpacity,\n      _ref$zIndex = _ref.zIndex,\n      zIndex = _ref$zIndex === void 0 ? 100 : _ref$zIndex,\n      _ref$duration = _ref.duration,\n      duration = _ref$duration === void 0 ? 500 : _ref$duration,\n      direction = _ref.direction,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 250 : _ref$size;\n  var overlayStyles = {\n    backgroundColor: \"\" + overlayColor,\n    opacity: \"\" + overlayOpacity,\n    zIndex: zIndex\n  };\n\n  var drawerStyles = _extends({\n    zIndex: zIndex + 1,\n    transitionDuration: duration + \"ms\"\n  }, getDirectionStyle(direction, size), style);\n\n  return createElement(\"div\", {\n    id: 'EZDrawer'\n  }, createElement(\"input\", {\n    type: 'checkbox',\n    id: 'EZDrawer__checkbox',\n    onChange: onClose,\n    checked: open\n  }), createElement(\"nav\", {\n    role: 'navigation',\n    id: 'EZDrawer__container',\n    style: drawerStyles\n  }, children), createElement(\"label\", {\n    htmlFor: 'EZDrawer__checkbox',\n    id: 'EZDrawer__overlay',\n    style: overlayStyles\n  }));\n};\n\nexport default EZDrawer;","map":{"version":3,"sources":["../src/index.tsx"],"names":["getDirectionStyle","top","left","transform","width","height","right","bottom","size","EZDrawer","open","onClose","children","style","overlayColor","overlayOpacity","zIndex","duration","direction","overlayStyles","backgroundColor","opacity","drawerStyles","transitionDuration","id","type","onChange","checked","role","htmlFor"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport './styles.scss'\n\ntype Props = {\n    open: boolean\n    onClose: () => void\n    direction: 'left' | 'right' | 'top' | 'bottom'\n    children?: React.ReactNode\n    duration?: number\n    overlayOpacity?: number\n    overlayColor?: String\n    style?: React.CSSProperties\n    zIndex?: number\n    size?: number\n}\n\nconst getDirectionStyle = (\n    dir: string,\n    size?: number,\n): {} | React.CSSProperties => {\n    switch (dir) {\n        case 'left':\n            return {\n                top: 0,\n                left: 0,\n                transform: 'translate3d(-100%, 0, 0)',\n                width: size,\n                height: '100vh',\n            }\n        case 'right':\n            return {\n                top: 0,\n                right: 0,\n                transform: 'translate3d(100%, 0, 0)',\n                width: size,\n                height: '100vh',\n            }\n        case 'bottom':\n            return {\n                left: 0,\n                right: 0,\n                bottom: 0,\n                transform: 'translate3d(0, 100%, 0)',\n                width: '100%',\n                height: size,\n            }\n        case 'top':\n            return {\n                left: 0,\n                right: 0,\n                top: 0,\n                transform: 'translate3d(0, -100%, 0)',\n                width: '100%',\n                height: size,\n            }\n\n        default:\n            return {}\n    }\n}\n\nconst EZDrawer: React.FC<Props> = function ({\n    open,\n    onClose = () => {},\n    children,\n    style,\n    overlayColor = '#000',\n    overlayOpacity = 0.4,\n    zIndex = 100,\n    duration = 500,\n    direction,\n    size = 250,\n}): JSX.Element {\n    const overlayStyles: React.CSSProperties = {\n        backgroundColor: `${overlayColor}`,\n        opacity: `${overlayOpacity}`,\n        zIndex: zIndex,\n    }\n\n    const drawerStyles: React.CSSProperties = {\n        zIndex: zIndex + 1,\n        transitionDuration: `${duration}ms`,\n        ...getDirectionStyle(direction, size),\n        ...style,\n    }\n\n    return (\n        <div id='EZDrawer'>\n            <input\n                type='checkbox'\n                id='EZDrawer__checkbox'\n                onChange={onClose}\n                checked={open}\n            />\n            <nav\n                role='navigation'\n                id='EZDrawer__container'\n                style={drawerStyles}\n            >\n                {children}\n            </nav>\n            <label\n                htmlFor='EZDrawer__checkbox'\n                id='EZDrawer__overlay'\n                style={overlayStyles}\n            />\n        </div>\n    )\n}\n\nexport default EZDrawer\n"]},"metadata":{},"sourceType":"module"}