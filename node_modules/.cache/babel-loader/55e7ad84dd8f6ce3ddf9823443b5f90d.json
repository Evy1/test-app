{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/nmc/Desktop/auth-app/src/components/Singup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { Form, Button, Card, Alert } from 'react-bootstrap';\nimport { useAuth } from '../context/AuthContext';\nimport { Link, useHistory } from 'react-router-dom';\nimport style from './SingUp.module.css';\nexport default function Singup() {\n  _s();\n\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const {\n    singup\n  } = useAuth();\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError('Password do not match');\n    }\n\n    try {\n      setError('');\n      setLoading(true);\n      await singup(emailRef.current.value, passwordRef.current.value);\n      history.push('/');\n    } catch {\n      setError('Failed to create an account');\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      className: style.Card,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: style.Title,\n        children: \"Sing Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"email\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              className: style.Input,\n              type: \"email\",\n              ref: emailRef,\n              required: true,\n              placeholder: \"E-mail\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"password\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              className: style.Input,\n              type: \"password\",\n              ref: passwordRef,\n              required: true,\n              placeholder: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"password-confirm\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              className: style.Input,\n              type: \"password\",\n              ref: passwordConfirmRef,\n              required: true,\n              placeholder: \"Confirm Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.Wrapper,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              disabled: loading,\n              className: style.Button,\n              type: \"submit\",\n              children: \" Sing Up \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-100 text-center mt-2\",\n      children: [\"Already have an account?\", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: \" Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Singup, \"RXKPZHNbLcIlJfjcriKVAluIau4=\", false, function () {\n  return [useAuth, useHistory];\n});\n\n_c = Singup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Singup\");","map":{"version":3,"sources":["/home/nmc/Desktop/auth-app/src/components/Singup.js"],"names":["React","useRef","useState","Form","Button","Card","Alert","useAuth","Link","useHistory","style","Singup","emailRef","passwordRef","passwordConfirmRef","singup","error","setError","loading","setLoading","history","handleSubmit","e","preventDefault","current","value","push","Title","Input","Wrapper"],"mappings":"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","sourcesContent":["import React, {useRef, useState} from 'react';\nimport {Form, Button,Card, Alert} from 'react-bootstrap';\nimport {useAuth} from '../context/AuthContext';\nimport {Link, useHistory} from 'react-router-dom';\nimport style from './SingUp.module.css';\n\nexport default function Singup() {\n    const emailRef = useRef();\n    const passwordRef = useRef();\n    const passwordConfirmRef = useRef();\n    const {singup} = useAuth();\n    const [error,setError] = useState('')\n    const [loading ,setLoading] = useState(false)\n    const history = useHistory();\n\n    async function handleSubmit(e){\n        e.preventDefault();\n        if(passwordRef.current.value !== passwordConfirmRef.current.value){\n            return setError('Password do not match')\n        }\n        try{\n            setError('');\n            setLoading(true);\n            await singup(emailRef.current.value, passwordRef.current.value)\n            history.push('/');\n        }catch{\n            setError('Failed to create an account')\n        }\n    }\n    return (\n        <>\n            <Card className={style.Card}>\n                    <h2 className={style.Title}>Sing Up</h2>\n                <Card.Body>\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\n                    <Form onSubmit={handleSubmit}>\n                        <Form.Group id=\"email\">\n                            <Form.Control className={style.Input} type=\"email\" ref={emailRef} required placeholder=\"E-mail\"/>\n                        </Form.Group>\n                        <Form.Group id=\"password\">\n                            <Form.Control className={style.Input} type=\"password\" ref={passwordRef} required placeholder=\"Password\"/>\n                        </Form.Group>\n                        <Form.Group id=\"password-confirm\">\n                            <Form.Control className={style.Input} type=\"password\" ref={passwordConfirmRef} required placeholder=\"Confirm Password\"/>\n                        </Form.Group>\n                        <div className={style.Wrapper}>\n                            <Button disabled={loading} className={style.Button} type=\"submit\"> Sing Up </Button>\n                        </div>\n                    </Form>\n                </Card.Body>\n            </Card>\n            <div className=\"w-100 text-center mt-2\">\n                Already have an account?<Link to=\"/login\"> Log In</Link> \n            </div>\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}