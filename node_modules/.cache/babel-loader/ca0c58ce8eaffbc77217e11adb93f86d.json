{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/nmc/Desktop/auth-app/src/components/Tasks/Tasks.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Card, Container } from 'react-bootstrap';\nimport styles from './Tasks.module.css';\nimport { useAuth } from '../../context/AuthContext';\nimport results from '../results';\nimport Buttons from '../Buttons/Buttons';\nimport firebase from '../../firebase';\n\nfunction Tasks() {\n  _s2();\n\n  const [items, setItems] = useState([]);\n  const {\n    currentUser\n  } = useAuth();\n\n  const _isMounted = useRef(true);\n\n  useEffect(() => {\n    results.get('/task.json').then(response => {\n      // console.log(response.data)\n      const fetchedResults = [];\n\n      for (let key in response.data) {\n        fetchedResults.unshift({ ...response.data[key],\n          id: key\n        });\n      }\n\n      setItems(fetchedResults);\n    });\n    return _isMounted.current = false;\n  }, [_isMounted]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row d-flex justify-content-center text-center pt-4\",\n      children: items.map(result => {\n        var _s = $RefreshSig$();\n\n        return result.user === currentUser.uid && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-md-4\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: styles.Card,\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: result.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                className: styles.TaskTitle,\n                children: result.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: result.content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex\",\n                children: [/*#__PURE__*/_jsxDEV(Buttons, {\n                  click: _s(() => {\n                    _s();\n\n                    return firebase.database().ref('task/' + result.id).update({\n                      status: 'done'\n                    }).then(useRef(true));\n                  }, \"J9pzIsEOVEZ74gjFtMkCj+5Po7s=\"),\n                  class: styles.DoneBtn,\n                  disable: result.status === \"done\",\n                  children: \"Done\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n                  click: () => firebase.database().ref('task/' + result.id).remove().then(setItems(items)),\n                  class: styles.DeleteBtn,\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n                  class: styles.EditBtn,\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this)\n        }, result.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 13\n  }, this);\n}\n\n_s2(Tasks, \"K6OVmWmpKzQSkDiUOkNWUE0EUXs=\", false, function () {\n  return [useAuth];\n});\n\n_c = Tasks;\nexport default Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["/home/nmc/Desktop/auth-app/src/components/Tasks/Tasks.js"],"names":["React","useState","useEffect","useRef","Card","Container","styles","useAuth","results","Buttons","firebase","Tasks","items","setItems","currentUser","_isMounted","get","then","response","fetchedResults","key","data","unshift","id","current","map","result","user","uid","date","TaskTitle","title","content","database","ref","update","status","DoneBtn","remove","DeleteBtn","EditBtn"],"mappings":"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","sourcesContent":["import React,{useState, useEffect, useRef} from 'react';\nimport {Card, Container} from 'react-bootstrap';\nimport styles from './Tasks.module.css';\nimport {useAuth} from '../../context/AuthContext'\nimport results from '../results';\nimport Buttons from '../Buttons/Buttons';\nimport firebase from '../../firebase'\n function Tasks(){\n     const [items, setItems] = useState([]);\n     const {currentUser} = useAuth();\n     const _isMounted = useRef(true);\n    useEffect(()=>{\n        results.get('/task.json').then(response=>{\n            // console.log(response.data)\n            const fetchedResults = [];\n                for(let key in response.data){\n                    fetchedResults.unshift({\n                        ...response.data[key],\n                        id: key,\n                    }\n                    )\n                }\n            setItems(fetchedResults)\n        })\n        return  _isMounted.current = false;\n     },[_isMounted])\n\n        return (\n            <Container>\n                <div className=\"row d-flex justify-content-center text-center pt-4\">\n                    {items.map(result=>(\n                        result.user === currentUser.uid &&\n                        <div className=\"col-12 col-md-4\" key={result.id}>\n                        <Card className={styles.Card} >\n                        <Card.Body>\n                            <div>\n                                {result.date}\n                            </div>\n                            <h2 className={styles.TaskTitle}>{result.title}</h2>\n                            <div>\n                                <p>{result.content}</p>\n                            </div>\n                            <div className=\"d-flex\">\n                                <Buttons  click={ () => firebase.database().ref('task/' + result.id).update({status: 'done'}).then(useRef(true))} \n                                class={styles.DoneBtn} disable={result.status === \"done\"}>Done</Buttons>\n                                <Buttons  click={ () => firebase.database().ref('task/' + result.id).remove().then(setItems(items))} \n                                class={styles.DeleteBtn}>Delete</Buttons>\n                                <Buttons  class={styles.EditBtn}>Edit</Buttons>\n                            </div>\n                        </Card.Body>\n                    </Card>\n                    </div>\n                    )) }\n                </div>\n            </Container>\n        )\n }\n    export default Tasks;\n"]},"metadata":{},"sourceType":"module"}